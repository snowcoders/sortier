// sortier-ignore
const example = 2 * pi * distance * distance * 5
 
 // TODO - Figure out how we want to handle sorts where the sortier ignore contextually implies two nodes (here it's the group of imports and the first import)
/* sortier-ignore */
import { b3, b1 } from "./b";
import {a3, a1 } from "./a";
import {c3, c1 } from "./c";

import {g3, g1 } from "./c";
/* sortier-ignore */
import {e3, e1 } from "./a";
import { f3, f1 } from "./b";

/* sortier-ignore */
let {a3, a1} = d;
let {b3, b1} = d;

// sortier-ignore
switch ("a") {
      case "c":
      case "d":
            // The ignore statement stops sorting for the whole tree, not just the node above it
            let {a3, a1} = d;
            console.log("c");
            break;
      case "b":
      case "a":
            console.log("a");
            break;
      default:
            break;
}